security:
    encoders:
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\User
                property: 'email'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            provider: in_database

            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                samesite: strict

            form_login:
                login_path: user_login
                check_path: user_login
                csrf_token_generator: security.csrf.token_manager
                use_referer: true

            logout:
                path: user_logout
                target: home

            access_denied_url: home
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used

    access_control:
        - { path: ^/member/login$, allow_if: "not is_granted('ROLE_USER')" }
        - { path: ^/member/registration$, allow_if: "not is_granted('ROLE_USER')" }
        - { path: /edit$, allow_if: "is_granted('ROLE_USER')" }
        # - { path: ^/member/login$, role: IS_AUTHENTICATED_ANONYMOUSLY && !IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

